{"version":3,"sources":["isFunction.js"],"names":[],"mappings":";;AAAA,IAAI,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;;AAGjD,IAAI,OAAO,GAAG,mBAAmB,CAAC;;;AAGlC,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;;;;;;AAMnC,IAAI,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC;;;AAGvC,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;AAkBjD,IAAI,UAAU,GAAG,EAAE,cAAc,CAAC,GAAG,CAAC,IAAK,UAAU,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,AAAC,GAAG,cAAc,GAAG,UAAS,KAAK,EAAE;;;;AAIxH,SAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC;CAC3C,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"isFunction-compiled.js","sourcesContent":["var baseIsFunction = require('../internal/baseIsFunction'),\n    getNative = require('../internal/getNative');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Native method references. */\nvar Uint8Array = getNative(global, 'Uint8Array');\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nvar isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 equivalents which return 'object' for typed array constructors.\n  return objToString.call(value) == funcTag;\n};\n\nmodule.exports = isFunction;\n"]}