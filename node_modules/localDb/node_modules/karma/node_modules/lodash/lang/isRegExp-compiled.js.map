{"version":3,"sources":["isRegExp.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;;;AAGvD,IAAI,SAAS,GAAG,iBAAiB,CAAC;;;AAGlC,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;;;;;;AAMnC,IAAI,WAAW,GAAG,WAAW,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;AAkBvC,SAAS,QAAQ,CAAC,KAAK,EAAE;AACvB,SAAO,YAAY,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;CACpE;;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"isRegExp-compiled.js","sourcesContent":["var isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nfunction isRegExp(value) {\n  return isObjectLike(value) && objToString.call(value) == regexpTag;\n}\n\nmodule.exports = isRegExp;\n"]}