{"version":3,"sources":["file_list.js"],"names":[],"mappings":"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","file":"file_list-compiled.js","sourcesContent":["var fs = require('fs');\nvar glob = require('glob');\nvar mm = require('minimatch');\nvar q = require('q');\n\nvar helper = require('./helper');\nvar log = require('./logger').create('watcher');\n\n\nvar createWinGlob = function(realGlob) {\n  return function(pattern, options, done) {\n    realGlob(pattern, options, function(err, results) {\n      done(err, results.map(helper.normalizeWinPath));\n    });\n  };\n};\n\nif (process.platform === 'win32') {\n  glob = createWinGlob(glob);\n}\n\n\nvar File = function(path, mtime) {\n  // used for serving (processed path, eg some/file.coffee -> some/file.coffee.js)\n  this.path = path;\n\n  // original absolute path, id of the file\n  this.originalPath = path;\n\n  // where the content is stored (processed)\n  this.contentPath = path;\n\n  this.mtime = mtime;\n  this.isUrl = false;\n};\n\nvar Url = function(path) {\n  this.path = path;\n  this.isUrl = true;\n};\n\nUrl.prototype.toString = File.prototype.toString = function() {\n  return this.path;\n};\n\n\nvar GLOB_OPTS = {\n  // globDebug: true,\n  cwd: '/'\n};\n\n\nvar byPath = function(a, b) {\n  if (a.path > b.path) {\n    return 1;\n  }\n  if (a.path < b.path) {\n    return -1;\n  }\n  return 0;\n};\n\n\n// TODO(vojta): ignore changes (add/change/remove) when in the middle of refresh\n// TODO(vojta): do not glob patterns that are watched (both on init and refresh)\nvar List = function(patterns, excludes, emitter, preprocess, batchInterval) {\n  var self = this;\n  var pendingDeferred;\n  var pendingTimeout;\n\n  var errors = [];\n\n  var addError = function(path) {\n    if (errors.indexOf(path) === -1) {\n      errors.push(path);\n    }\n  };\n\n  var removeError = function(path) {\n    var idx = errors.indexOf(path);\n\n    if (idx !== -1) {\n      errors.splice(idx, 1);\n    }\n  };\n\n  var resolveFiles = function(buckets) {\n    var uniqueMap = {};\n    var files = {\n      served: [],\n      included: []\n    };\n\n    buckets.forEach(function(bucket, idx) {\n      bucket.sort(byPath).forEach(function(file) {\n        if (!uniqueMap[file.path]) {\n          if (patterns[idx].served) {\n            files.served.push(file);\n          }\n\n          if (patterns[idx].included) {\n            files.included.push(file);\n          }\n\n          uniqueMap[file.path] = true;\n        }\n      });\n    });\n\n    return files;\n  };\n\n  var resolveDeferred = function(files) {\n    clearPendingTimeout();\n\n    if (!errors.length) {\n      pendingDeferred.resolve(files || resolveFiles(self.buckets));\n    } else {\n      pendingDeferred.reject(errors.slice());\n    }\n\n    pendingDeferred = pendingTimeout = null;\n  };\n\n  var fireEventAndDefer = function() {\n    clearPendingTimeout();\n\n    if (!pendingDeferred) {\n      pendingDeferred = q.defer();\n      emitter.emit('file_list_modified', pendingDeferred.promise);\n    }\n\n    pendingTimeout = setTimeout(resolveDeferred, batchInterval);\n  };\n\n  var clearPendingTimeout = function() {\n    if (pendingTimeout) {\n      clearTimeout(pendingTimeout);\n    }\n  };\n\n\n  // re-glob all the patterns\n  this.refresh = function() {\n    // TODO(vojta): cancel refresh if another refresh starts\n    var buckets = self.buckets = new Array(patterns.length);\n\n    var complete = function() {\n      if (buckets !== self.buckets) {\n        return;\n      }\n\n      var files = resolveFiles(buckets);\n\n      resolveDeferred(files);\n      log.debug('Resolved files:\\n\\t' + files.served.join('\\n\\t'));\n    };\n\n    // TODO(vojta): use some async helper library for this\n    var pending = 0;\n    var finish = function() {\n      pending--;\n\n      if (!pending) {\n        complete();\n      }\n    };\n\n    errors = [];\n\n    if (!pendingDeferred) {\n      pendingDeferred = q.defer();\n      emitter.emit('file_list_modified', pendingDeferred.promise);\n    }\n\n    clearPendingTimeout();\n\n    patterns.forEach(function(patternObject, i) {\n      var pattern = patternObject.pattern;\n\n      if (helper.isUrlAbsolute(pattern)) {\n        buckets[i] = [new Url(pattern)];\n        return;\n      }\n\n      pending++;\n      glob(pattern, GLOB_OPTS, function(err, resolvedFiles) {\n        var matchedAndNotIgnored = 0;\n\n        buckets[i] = [];\n\n        if (!resolvedFiles.length) {\n          log.warn('Pattern \"%s\" does not match any file.', pattern);\n          return finish();\n        }\n\n        // stat each file to get mtime and isDirectory\n        resolvedFiles.forEach(function(path) {\n          var matchExclude = function(excludePattern) {\n            return mm(path, excludePattern);\n          };\n\n          if (excludes.some(matchExclude)) {\n            log.debug('Excluded file \"%s\"', path);\n            return;\n          }\n\n          pending++;\n          matchedAndNotIgnored++;\n          fs.stat(path, function(error, stat) {\n            if (error) {\n              log.debug('An error occured while reading \"%s\"', path);\n              finish();\n            } else {\n              if (!stat.isDirectory()) {\n                // TODO(vojta): reuse file objects\n                var file = new File(path, stat.mtime);\n\n                preprocess(file, function(err) {\n                  buckets[i].push(file);\n\n                  if (err) {\n                    addError(path);\n                  }\n\n                  finish();\n                });\n              } else {\n                log.debug('Ignored directory \"%s\"', path);\n                finish();\n              }\n            }\n          });\n        });\n\n        if (!matchedAndNotIgnored) {\n          log.warn('All files matched by \"%s\" were excluded.', pattern);\n        }\n\n        finish();\n      });\n    });\n\n    if (!pending) {\n      process.nextTick(complete);\n    }\n\n    return pendingDeferred.promise;\n  };\n\n\n  // set new patterns and excludes\n  // and re-glob\n  this.reload = function(newPatterns, newExcludes) {\n    patterns = newPatterns;\n    excludes = newExcludes;\n\n    return this.refresh();\n  };\n\n\n  /**\n   * Adds a new file into the list (called by watcher)\n   *  - ignore excluded files\n   *  - ignore files that are already in the list\n   *  - get mtime (by stat)\n   *  - fires \"file_list_modified\"\n   */\n  this.addFile = function(path, done) {\n    var buckets = this.buckets;\n    var i, j;\n\n    // sorry, this callback is just for easier testing\n    done = done || function() {};\n\n    // check excludes\n    for (i = 0; i < excludes.length; i++) {\n      if (mm(path, excludes[i])) {\n        log.debug('Add file \"%s\" ignored. Excluded by \"%s\".', path, excludes[i]);\n        return done();\n      }\n    }\n\n    for (i = 0; i < patterns.length; i++) {\n      if (mm(path, patterns[i].pattern)) {\n        for (j = 0; j < buckets[i].length; j++) {\n          if (buckets[i][j].originalPath === path) {\n            log.debug('Add file \"%s\" ignored. Already in the list.', path);\n            return done();\n          }\n        }\n\n        break;\n      }\n    }\n\n    if (i >= patterns.length) {\n      log.debug('Add file \"%s\" ignored. Does not match any pattern.', path);\n      return done();\n    }\n\n    var addedFile = new File(path);\n    buckets[i].push(addedFile);\n\n    clearPendingTimeout();\n\n    return fs.stat(path, function(err, stat) {\n      // in the case someone refresh() the list before stat callback\n      if (self.buckets === buckets) {\n        addedFile.mtime = stat.mtime;\n\n        return preprocess(addedFile, function(err) {\n          // TODO(vojta): ignore if refresh/reload happens\n          log.info('Added file \"%s\".', path);\n\n          if (err) {\n            addError(path);\n          }\n\n          fireEventAndDefer();\n          done();\n        });\n      }\n\n      return done();\n    });\n  };\n\n\n  /**\n   * Update mtime of a file (called by watcher)\n   *  - ignore if file is not in the list\n   *  - ignore if mtime has not changed\n   *  - fire \"file_list_modified\"\n   */\n  this.changeFile = function(path, done) {\n    var buckets = this.buckets;\n    var i, j;\n\n    // sorry, this callback is just for easier testing\n    done = done || function() {};\n\n    outer:\n    for (i = 0; i < buckets.length; i++) {\n      for (j = 0; j < buckets[i].length; j++) {\n        if (buckets[i][j].originalPath === path) {\n          break outer;\n        }\n      }\n    }\n\n    if (!buckets[i]) {\n      log.debug('Changed file \"%s\" ignored. Does not match any file in the list.', path);\n      return done();\n    }\n\n    var changedFile = buckets[i][j];\n    return fs.stat(path, function(err, stat) {\n      // https://github.com/paulmillr/chokidar/issues/11\n      if (err || !stat) {\n        return self.removeFile(path, done);\n      }\n\n      if (self.buckets === buckets && stat.mtime > changedFile.mtime) {\n        log.info('Changed file \"%s\".', path);\n        changedFile.mtime = stat.mtime;\n        // TODO(vojta): THIS CAN MAKE FILES INCONSISTENT\n        // if batched change is resolved before preprocessing is finished, the file can be in\n        // inconsistent state, when the promise is resolved.\n        // Solutions:\n        // 1/ the preprocessor should not change the object in place, but create a copy that would\n        // be eventually merged into the original file, here in the callback, synchronously.\n        // 2/ delay the promise resolution - wait for any changeFile operations to finish\n        return preprocess(changedFile, function(err) {\n          if (err) {\n            addError(path);\n          } else {\n            removeError(path);\n          }\n\n          // TODO(vojta): ignore if refresh/reload happens\n          fireEventAndDefer();\n          done();\n        });\n      }\n\n      return done();\n    });\n  };\n\n\n  /**\n   * Remove a file from the list (called by watcher)\n   *  - ignore if file is not in the list\n   *  - fire \"file_list_modified\"\n   */\n  this.removeFile = function(path, done) {\n    var buckets = this.buckets;\n\n    // sorry, this callback is just for easier testing\n    done = done || function() {};\n\n    for (var i = 0; i < buckets.length; i++) {\n      for (var j = 0; j < buckets[i].length; j++) {\n        if (buckets[i][j].originalPath === path) {\n          buckets[i].splice(j, 1);\n          log.info('Removed file \"%s\".', path);\n          removeError(path);\n          fireEventAndDefer();\n          return done();\n        }\n      }\n    }\n\n    log.debug('Removed file \"%s\" ignored. Does not match any file in the list.', path);\n    return done();\n  };\n};\nList.$inject = ['config.files', 'config.exclude', 'emitter', 'preprocess',\n    'config.autoWatchBatchDelay'];\n\n// PUBLIC\nexports.List = List;\nexports.File = File;\nexports.Url = Url;\n"]}