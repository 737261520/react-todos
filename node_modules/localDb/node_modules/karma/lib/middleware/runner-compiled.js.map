{"version":3,"sources":["runner.js"],"names":[],"mappings":"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","file":"runner-compiled.js","sourcesContent":["/**\n * Runner middleware is reponsible for communication with `karma run`.\n *\n * It basically triggers a test run and streams stdout back.\n */\n\nvar path = require('path');\nvar helper = require('../helper');\nvar log = require('../logger').create();\nvar constant = require('../constants');\nvar json = require('connect').json();\n\n// TODO(vojta): disable when single-run mode\nvar createRunnerMiddleware = function(emitter, fileList, capturedBrowsers, reporter, executor,\n    /* config.hostname */ hostname, /* config.port */ port, /* config.urlRoot */ urlRoot, config) {\n\n  return function(request, response, next) {\n\n    if (request.url !== '/__run__' && request.url !== urlRoot + 'run') {\n      return next();\n    }\n\n    log.debug('Execution (fired by runner)');\n    response.writeHead(200);\n\n    if (!capturedBrowsers.length) {\n      var url = 'http://' + hostname + ':' + port + urlRoot;\n\n      return response.end('No captured browser, open ' + url + '\\n');\n    }\n\n    json(request, response, function() {\n      if (!capturedBrowsers.areAllReady([])) {\n        response.write('Waiting for previous execution...\\n');\n      }\n\n      emitter.once('run_start', function() {\n        var responseWrite = response.write.bind(response);\n\n        reporter.addAdapter(responseWrite);\n\n        // clean up, close runner response\n        emitter.once('run_complete', function(browsers, results) {\n          reporter.removeAdapter(responseWrite);\n          response.end(constant.EXIT_CODE + results.exitCode);\n        });\n      });\n\n      var data = request.body;\n      log.debug('Setting client.args to ', data.args);\n      config.client.args = data.args;\n\n      var fullRefresh = true;\n\n      if (helper.isArray(data.changedFiles)) {\n        data.changedFiles.forEach(function(filepath) {\n          fileList.changeFile(path.resolve(config.basePath, filepath));\n          fullRefresh = false;\n        });\n      }\n\n      if (helper.isArray(data.addedFiles)) {\n        data.addedFiles.forEach(function(filepath) {\n          fileList.addFile(path.resolve(config.basePath, filepath));\n          fullRefresh = false;\n        });\n      }\n\n      if (helper.isArray(data.removedFiles)) {\n        data.removedFiles.forEach(function(filepath) {\n          fileList.removeFile(path.resolve(config.basePath, filepath));\n          fullRefresh = false;\n        });\n      }\n\n      if (fullRefresh && data.refresh !== false) {\n        log.debug('Refreshing all the files / patterns');\n        fileList.refresh();\n\n        if (!config.autoWatch) {\n          executor.schedule();\n        }\n      } else {\n        executor.schedule();\n      }\n    });\n  };\n};\n\ncreateRunnerMiddleware.$inject = ['emitter', 'fileList', 'capturedBrowsers', 'reporter', 'executor',\n  'config.hostname', 'config.port', 'config.urlRoot', 'config'];\n\n\n// PUBLIC API\nexports.create = createRunnerMiddleware;\n"]}