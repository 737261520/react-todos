{"version":3,"sources":["cli.js"],"names":[],"mappings":"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","file":"cli-compiled.js","sourcesContent":["var path = require('path');\nvar optimist = require('optimist');\nvar helper = require('./helper');\nvar constant = require('./constants');\nvar fs = require('fs');\n\nvar processArgs = function(argv, options, fs, path) {\n\n  if (argv.help) {\n    console.log(optimist.help());\n    process.exit(0);\n  }\n\n  if (argv.version) {\n    console.log('Karma version: ' + constant.VERSION);\n    process.exit(0);\n  }\n\n  // TODO(vojta): warn/throw when unknown argument (probably mispelled)\n  Object.getOwnPropertyNames(argv).forEach(function(name) {\n    var argumentValue = argv[name];\n    if (name !== '_' && name !== '$0') {\n      if (Array.isArray(argumentValue)) {\n        // If the same argument is defined multiple times, override.\n        argumentValue = argumentValue.pop();\n      }\n      options[helper.dashToCamel(name)] = argumentValue;\n    }\n  });\n\n  if (helper.isString(options.autoWatch)) {\n    options.autoWatch = options.autoWatch === 'true';\n  }\n\n  if (helper.isString(options.colors)) {\n    options.colors = options.colors === 'true';\n  }\n\n  if (helper.isString(options.logLevel)) {\n    options.logLevel = constant['LOG_' + options.logLevel.toUpperCase()] || constant.LOG_DISABLE;\n  }\n\n  if (helper.isString(options.singleRun)) {\n    options.singleRun = options.singleRun === 'true';\n  }\n\n  if (helper.isString(options.browsers)) {\n    options.browsers = options.browsers.split(',');\n  }\n\n  if (options.reportSlowerThan === false) {\n    options.reportSlowerThan = 0;\n  }\n\n  if (helper.isString(options.reporters)) {\n    options.reporters = options.reporters.split(',');\n  }\n\n  if (helper.isString(options.removedFiles)) {\n    options.removedFiles = options.removedFiles.split(',');\n  }\n\n  if (helper.isString(options.addedFiles)) {\n    options.addedFiles = options.addedFiles.split(',');\n  }\n\n  if (helper.isString(options.changedFiles)) {\n    options.changedFiles = options.changedFiles.split(',');\n  }\n\n  if (helper.isString(options.refresh)) {\n    options.refresh = options.refresh === 'true';\n  }\n\n  var configFile = argv._.shift();\n\n  if (!configFile) {\n    // default config file (if exists)\n    if (fs.existsSync('./karma.conf.js')) {\n      configFile = './karma.conf.js';\n    } else if (fs.existsSync('./karma.conf.coffee')) {\n      configFile = './karma.conf.coffee';\n    }\n  }\n\n  options.configFile = configFile ? path.resolve(configFile) : null;\n\n  return options;\n};\n\nvar parseClientArgs = function(argv) {\n  // extract any args after '--' as clientArgs\n  var clientArgs = [];\n  argv = argv.slice(2);\n  var idx = argv.indexOf('--');\n  if (idx !== -1) {\n    clientArgs = argv.slice(idx + 1);\n  }\n  return clientArgs;\n};\n\n// return only args that occur before `--`\nvar argsBeforeDoubleDash = function(argv) {\n  var idx = argv.indexOf('--');\n\n  return idx === -1 ? argv : argv.slice(0, idx);\n};\n\n\nvar describeShared = function() {\n  optimist\n    .usage('Karma - Spectacular Test Runner for JavaScript.\\n\\n' +\n           'Usage:\\n' +\n           '  $0 <command>\\n\\n' +\n           'Commands:\\n' +\n           '  start [<configFile>] [<options>] Start the server / do single run.\\n' +\n           '  init [<configFile>] Initialize a config file.\\n' +\n           '  run [<options>] [ -- <clientArgs>] Trigger a test run.\\n' +\n           '  completion Shell completion for karma.\\n\\n' +\n           'Run --help with particular command to see its description and available options.')\n    .describe('help', 'Print usage and options.')\n    .describe('version', 'Print current version.');\n};\n\n\nvar describeInit = function() {\n  optimist\n    .usage('Karma - Spectacular Test Runner for JavaScript.\\n\\n' +\n           'INIT - Initialize a config file.\\n\\n' +\n           'Usage:\\n' +\n           '  $0 init [<configFile>]')\n    .describe('log-level', '<disable | error | warn | info | debug> Level of logging.')\n    .describe('colors', 'Use colors when reporting and printing logs.')\n    .describe('no-colors', 'Do not use colors when reporting or printing logs.')\n    .describe('help', 'Print usage and options.');\n};\n\n\nvar describeStart = function() {\n  optimist\n    .usage('Karma - Spectacular Test Runner for JavaScript.\\n\\n' +\n           'START - Start the server / do a single run.\\n\\n' +\n           'Usage:\\n' +\n           '  $0 start [<configFile>] [<options>]')\n    .describe('port', '<integer> Port where the server is running.')\n    .describe('auto-watch', 'Auto watch source files and run on change.')\n    .describe('no-auto-watch', 'Do not watch source files.')\n    .describe('log-level', '<disable | error | warn | info | debug> Level of logging.')\n    .describe('colors', 'Use colors when reporting and printing logs.')\n    .describe('no-colors', 'Do not use colors when reporting or printing logs.')\n    .describe('reporters', 'List of reporters (available: dots, progress, junit, growl, coverage).')\n    .describe('browsers', 'List of browsers to start (eg. --browsers Chrome,ChromeCanary,Firefox).')\n    .describe('capture-timeout', '<integer> Kill browser if does not capture in given time [ms].')\n    .describe('single-run', 'Run the test when browsers captured and exit.')\n    .describe('no-single-run', 'Disable single-run.')\n    .describe('report-slower-than', '<integer> Report tests that are slower than given time [ms].')\n    .describe('help', 'Print usage and options.');\n};\n\n\nvar describeRun = function() {\n  optimist\n    .usage('Karma - Spectacular Test Runner for JavaScript.\\n\\n' +\n           'RUN - Run the tests (requires running server).\\n\\n' +\n      'Usage:\\n' +\n      '  $0 run [<configFile>] [<options>] [ -- <clientArgs>]')\n    .describe('port', '<integer> Port where the server is listening.')\n    .describe('no-refresh', 'Do not re-glob all the patterns.')\n    .describe('help', 'Print usage.');\n};\n\n\nvar describeCompletion = function() {\n  optimist\n    .usage('Karma - Spectacular Test Runner for JavaScript.\\n\\n' +\n           'COMPLETION - Bash/ZSH completion for karma.\\n\\n' +\n      'Installation:\\n' +\n      '  $0 completion >> ~/.bashrc\\n')\n    .describe('help', 'Print usage.');\n};\n\n\nexports.process = function() {\n\n  var argv = optimist.parse(argsBeforeDoubleDash(process.argv.slice(2)));\n  var options = {\n    cmd: argv._.shift()\n  };\n\n  switch (options.cmd) {\n  case 'start':\n    describeStart();\n    break;\n\n  case 'run':\n    describeRun();\n    options.clientArgs = parseClientArgs(process.argv);\n    break;\n\n  case 'init':\n    describeInit();\n    break;\n\n  case 'completion':\n    describeCompletion();\n    break;\n\n  default:\n    describeShared();\n    if (!options.cmd) {\n      processArgs(argv, options, fs, path);\n      console.error('Command not specified.');\n    } else {\n      console.error('Unknown command \"' + options.cmd + '\".');\n    }\n    optimist.showHelp();\n    process.exit(1);\n  }\n\n  return processArgs(argv, options, fs, path);\n};\n\n\nexports.run = function() {\n  var config = exports.process();\n\n  switch (config.cmd) {\n  case 'start':\n    require('./server').start(config);\n    break;\n  case 'run':\n    require('./runner').run(config);\n    break;\n  case 'init':\n    require('./init').init(config);\n    break;\n  case 'completion':\n    require('./completion').completion(config);\n    break;\n  }\n};\n\n\n// just for testing\nexports.processArgs = processArgs;\nexports.parseClientArgs = parseClientArgs;\nexports.argsBeforeDoubleDash = argsBeforeDoubleDash;\n"]}