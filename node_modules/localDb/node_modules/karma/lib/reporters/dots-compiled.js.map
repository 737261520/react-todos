{"version":3,"sources":["dots.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAGrC,IAAI,YAAY,GAAG,SAAf,YAAY,CAAY,WAAW,EAAE,UAAU,EAAE;AACnD,cAAY,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;;AAEjD,MAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,MAAI,CAAC,UAAU,GAAG,YAAW;AAC3B,QAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,QAAI,CAAC,UAAU,GAAG,CAAC,CAAC;GACrB,CAAC;;AAEF,MAAI,CAAC,cAAc,GAAG,UAAS,OAAO,EAAE;AACtC,QAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GAC9B,CAAC;;AAEF,MAAI,CAAC,cAAc,GAAG,UAAS,GAAG,EAAE;AAClC,QAAI,IAAI,CAAC,UAAU,EAAE;AACnB,UAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACpB,SAAG,GAAG,IAAI,GAAG,GAAG,CAAC;KAClB;;AAED,QAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GAEjB,CAAC;;AAGF,MAAI,CAAC,WAAW,GAAG,YAAW;AAC5B,QAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAA,GAAI,SAAS,CAAC;AACpD,QAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;GAC3C,CAAC;;AAEF,MAAI,CAAC,iBAAiB,GAAG,UAAS,OAAO,EAAE;AACzC,QAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC;GACzD,CAAC;;AAEF,MAAI,CAAC,aAAa,GAAG,UAAS,QAAQ,EAAE,OAAO,EAAE;AAC/C,QAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AAClE,UAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnB,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;OACjD,MAAM;AACL,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;OAChE;KACF;GACF,CAAC;CACH,CAAC;;;AAIF,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"dots-compiled.js","sourcesContent":["var BaseReporter = require('./base');\n\n\nvar DotsReporter = function(formatError, reportSlow) {\n  BaseReporter.call(this, formatError, reportSlow);\n\n  var DOTS_WRAP = 80;\n\n  this.onRunStart = function() {\n    this._browsers = [];\n    this._dotsCount = 0;\n  };\n\n  this.onBrowserStart = function(browser) {\n    this._browsers.push(browser);\n  };\n\n  this.writeCommonMsg = function(msg) {\n    if (this._dotsCount) {\n      this._dotsCount = 0;\n      msg = '\\n' + msg;\n    }\n\n    this.write(msg);\n\n  };\n\n\n  this.specSuccess = function() {\n    this._dotsCount = (this._dotsCount + 1) % DOTS_WRAP;\n    this.write(this._dotsCount ? '.' : '.\\n');\n  };\n\n  this.onBrowserComplete = function(browser) {\n    this.writeCommonMsg(this.renderBrowser(browser) + '\\n');\n  };\n\n  this.onRunComplete = function(browsers, results) {\n    if (browsers.length > 1 && !results.disconnected && !results.error) {\n      if (!results.failed) {\n        this.write(this.TOTAL_SUCCESS, results.success);\n      } else {\n        this.write(this.TOTAL_FAILED, results.failed, results.success);\n      }\n    }\n  };\n};\n\n\n// PUBLISH\nmodule.exports = DotsReporter;\n"]}